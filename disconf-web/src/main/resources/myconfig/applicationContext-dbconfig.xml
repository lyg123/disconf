<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <description>database数据源配置</description>

    <!-- onedb configure start -->
	<bean id="onedbDataSource" abstract="true" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="initialSize" value="${dbcp.initialSize}" /><!--初始化连接 -->
		<property name="maxActive" value="${dbcp.maxActive}" /><!--最大活动连接 -->
		<property name="minIdle" value="${dbcp.minIdle}" /><!--最小空闲连接 -->
		<property name="maxIdle" value="${dbcp.maxIdle}" /><!--最大空闲连接 -->
		<property name="maxWait" value="${dbcp.maxWait}" /><!--最大等待时间(单位:毫秒) -->
		<property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" /> <!--活动连接的最大空闲时间（单位：秒） -->
		<property name="removeAbandoned" value="${dbcp.removeAbandoned}" /> <!--是否自动清理没有使用的活动连接 -->
		<property name="minEvictableIdleTimeMillis" value="${dbcp.minEvictableIdleTimeMillis}" /><!--连接最大空闲时间（单位：毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="${dbcp.timeBetweenEvictionRunsMillis}" /> <!--定时运行空闲连接回收器时间(单位：毫秒) -->
		<property name="numTestsPerEvictionRun" value="${dbcp.numTestsPerEvictionRun}" /> <!--每次验证空闲连接的连接数目 -->
		<property name="validationQuery" value="${dbcp.validationQuery}" /> <!--验证数据库连接SQL语句 -->
		<property name="testOnBorrow" value="${dbcp.testOnBorrow}" /> <!--借出连接，验证是否有效 -->
		<property name="testOnReturn" value="${dbcp.testOnReturn}" /> <!--返还连接，验证是否有效 -->
		<property name="testWhileIdle" value="${dbcp.testWhileIdle}" /> <!--空闲连接回收器验证空闲连接是否有效-->
		<property name="logAbandoned" value="${dbcp.logAbandoned}" /> <!--连接池收回空闲的活动连接时是否打印消息 -->
	</bean>
    <bean id="onedb_0" parent="onedbDataSource">
   		<property name="driverClassName" value="${jdbc.driverClassName}" /><!--数据库驱动 -->
        <property name="url" value="${jdbc.db_0.url}" /><!--数据库连接URL -->
		<property name="username" value="${jdbc.db_0.username}" /><!--用户 -->
		<property name="password" value="${jdbc.db_0.password}" /><!--密码 -->
    </bean>

    <bean id="vdb_one"
          class="com.baidu.ub.common.dbmanage.datasource.VirtualDataSource">
        <property name="masterSet">
            <list>
                <value>onedb_0</value>
            </list>
        </property>
        <property name="loadbalance" value="1"/>
    </bean>

    <bean id="onedbMultiDataSource" class="com.baidu.ub.common.dbmanage.datasource.MultiDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="onedb_0" value-ref="onedb_0"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="onedb_0"/>
        <property name="multiDataSourceKeyContext">
            <ref local="onedbMultiDSKeyContext"/>
        </property>
    </bean>

    <bean id="onedbRouter" class="com.baidu.ub.common.dbmanage.router.IDRouter">
        <property name="prefix" value="vdb_one"/>
        <property name="dbShardingRule">
            <ref local="onedbShardingRule"/>
        </property>
    </bean>
    <bean id="onedbShardingRule"
          class="com.baidu.ub.common.dbmanage.rule.SimpleDBShardingRuleImpl">
        <property name="shardingNum" value="1"/>
    </bean>
    <bean id="onedbMultiDSKeyContext"
          class="com.baidu.ub.common.dbmanage.datasource.MultiDataSourceKeyContext">
        <property name="router">
            <ref local="onedbRouter"/>
        </property>
        <property name="dbName" value="oneDB"/>
    </bean>

    <bean id="onedbJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="onedbMultiDataSource"/>
    </bean>
    <!-- onedb configure end -->


    <!-- Transaction config -->
    <bean id="onedbTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="onedbMultiDataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="onedbTransactionManager"/>

</beans>